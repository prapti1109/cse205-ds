# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        if root is None:
            return 
        queue = []
        result = []
        queue.append(root)
        while len(queue) > 0:
            node =  queue.pop(0)
            if node.val == val:
                return node
            else:
                if node.left is not None:
                    queue.append(node.left) 
                if node.right is not None:
                    queue.append(node.right)
        return 