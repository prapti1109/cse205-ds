class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        def backtrack(start):
            if start == len(nums) - 1:
                result.append(nums[:])  # Append a copy of the current permutation
                return
            for i in range(start, len(nums)):
                # Swap the current element with the element at the start index
                nums[start], nums[i] = nums[i], nums[start]
                backtrack(start + 1)  # Recur for the remaining elements
                # Backtrack by swapping back to the original state
                nums[start], nums[i] = nums[i], nums[start]
        
        result = []
        backtrack(0)
        return result